//
//  main.c
//  dynamicsODE
//
//  Created by Zainab Alsuwaykit on 11/30/22.
//

#include <stdio.h>
#include <math.h>
float a = 0.1;
float gamma_ = 0.8;
float r = 1;
float d = 0.44;
float M0 =0.3;
float C0 = 0.4;
float g = 0.1; //0 < g < 0.8.
float h;//= (b-a)/N

//initial conditions here
void initial(){
    
    }

//explicit Euler scheme for the numerical solution
void Euler(){
    float tau = 0.01; //step size
    float M = M0;
    float C = C0;
    float T = 1-M-C;
   
    float t; //number of iterations
    for (M0 = 0; M0<=1;M0+=0.01)
    {
        M = M0;
        for (C0 = 0 ;C0<=1; C0+=0.01)
        {
            C = C0;
            for (t=0 ;t< 20; t+=tau)
            {
                T = 1-M-C;
                M += tau * ((a*M*C) - ((g*M)/(M+T)) + (gamma_*M*T));
                C += tau * ((r*T*C) - (a*M*C) - (d*C));
                
                printf ("%f\t\t%f\t\t%f\n",M,C,T);
            }
        }
            
    }
        
    
}

int main(int argc, const char * argv[]) {
    Euler();
    //printf("\nFinished!!\n");
    return 0;
}
